// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("COMPASS_MYSQL_DATABASE_URL")
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(64)
  description String?  @db.VarChar(255)
  isFinished  Boolean? @default(false) @map("is_finished") // 是否完成
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("todos")
}

model Permission {
  id          Int      @id @default(autoincrement())
  key         String   @unique @db.VarChar(128)
  name        String   @db.VarChar(24)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  roles       Role[]

  @@index([key])
  @@map("permissions")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(24)
  description String?      @db.VarChar(255)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  permissions Permission[]
  users       User[]

  @@map("roles")
}

model User {
  id            String    @id @default(cuid())
  password      String?   @db.VarChar(64) // 登录密码
  openid        String?   @unique @db.VarChar(255) // 微信openid
  telephone     String?   @unique @db.VarChar(64) // 手机号码
  email         String?   @unique @db.VarChar(255) // 邮箱
  name          String?   @db.VarChar(255) // 真实姓名
  nickname      String?   @db.VarChar(24) // 昵称
  gender        Gender?   @default(UNKOWN)
  birthday      DateTime?
  enabled       Boolean?  @default(true) // 账号启用状态
  lastLoginTime DateTime? @map("last_login_time")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  roles         Role[]
  todos         Todo[]

  @@index([telephone, email, openid])
  @@map("users")
}

enum Gender {
  WOMEN
  MEN
  UNKOWN
}
